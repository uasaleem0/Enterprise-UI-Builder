name: CI/CD Pipeline

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (if Node project)
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Ruby (if Rails project)
        if: hashFiles('Gemfile') != ''
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Setup Python (if Python project)
        if: hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != ''
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies (Node)
        if: hashFiles('package.json') != ''
        run: npm ci

      - name: Install dependencies (Rails)
        if: hashFiles('Gemfile') != ''
        run: bundle install

      - name: Install dependencies (Python)
        if: hashFiles('requirements.txt') != ''
        run: pip install -r requirements.txt

      - name: Run tests (Node)
        if: hashFiles('package.json') != ''
        run: npm test

      - name: Run tests (Rails)
        if: hashFiles('Gemfile') != ''
        run: bundle exec rails test

      - name: Run tests (Python)
        if: hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != ''
        run: pytest

  lint:
    name: Run Linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (if Node project)
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (Node)
        if: hashFiles('package.json') != ''
        run: npm ci

      - name: Run ESLint (Node)
        if: hashFiles('package.json') != ''
        run: npm run lint --if-present

      - name: Run RuboCop (Rails)
        if: hashFiles('Gemfile') != ''
        run: |
          gem install rubocop
          rubocop

      - name: Run Flake8 (Python)
        if: hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != ''
        run: |
          pip install flake8
          flake8 .

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (if Node project)
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (Node)
        if: hashFiles('package.json') != ''
        run: npm ci

      - name: Build (Node)
        if: hashFiles('package.json') != ''
        run: npm run build --if-present

      - name: Build success
        run: echo "âœ… Build completed successfully"

  # Auto-deploy to production on main branch (optional)
  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #
  #   steps:
  #     - name: Deploy to Render/Vercel/Railway
  #       run: echo "ðŸš€ Deploy step - configure based on hosting provider"
